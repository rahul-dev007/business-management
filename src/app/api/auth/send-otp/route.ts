import { NextRequest, NextResponse } from 'next/server';
import connectDB from '@/lib/db';
import Otp from '@/models/Otp';
import { generateOTP } from '@/lib/otp';
import { sendOTPEmail } from '@/lib/mailer';
import { rateLimiter } from '@/lib/rateLimiter'; // ‚úÖ RateLimiter import

export async function POST(req: NextRequest) {
  await connectDB();

  const ip = req.headers.get('x-forwarded-for') || 'anonymous'; // üîê Rate limiter IP
  const { success } = await rateLimiter.limit(ip);

  if (!success) {
    return NextResponse.json(
      { message: '‚ùå ‡¶Ö‡¶®‡ßá‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§ ‡ßß ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§' },
      { status: 429 }
    );
  }

  const { email } = await req.json();
  if (!email) {
    return NextResponse.json({ message: '‚ö†Ô∏è ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞' }, { status: 400 });
  }

  const otp = generateOTP();
  await Otp.create({ email, otp });

  const sent = await sendOTPEmail(email, otp);

  if (sent) {
    return NextResponse.json({ message: '‚úÖ OTP ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá' });
  } else {
    return NextResponse.json({ message: '‚ùå OTP ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•' }, { status: 500 });
  }
}
